name: Build Cross-Platform

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: keystroke-audio-player.exe
            release_name: keystroke-audio-player-windows-x64.zip
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: keystroke-audio-player
            release_name: keystroke-audio-player-macos-x64.zip
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: keystroke-audio-player
            release_name: keystroke-audio-player-macos-arm64.zip

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        # macOS dependencies for audio and input handling
        brew install pkg-config

    - name: Cache cargo registry
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: Build
      run: cargo build --release --target ${{ matrix.target }}

    - name: Create release package
      shell: bash
      run: |
        mkdir -p release
        cp target/${{ matrix.target }}/release/${{ matrix.artifact_name }} release/
        cp -r audio release/
        cd release
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          7z a ../${{ matrix.release_name }} *
        else
          zip -r ../${{ matrix.release_name }} *
        fi

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.release_name }}
        path: ${{ matrix.release_name }}

    - name: Upload to release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./${{ matrix.release_name }}
        asset_name: ${{ matrix.release_name }}
        asset_content_type: application/zip